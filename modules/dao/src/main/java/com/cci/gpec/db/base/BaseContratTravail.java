package com.cci.gpec.db.base;

import java.io.Serializable;

/**
 * This class has been automatically generated by Hibernate Synchronizer. For
 * more information or documentation, visit The Hibernate Synchronizer page at
 * http://www.binamics.com/hibernatesync or contact Joe Hudson at
 * joe@binamics.com.
 * 
 * This is an object that contains data related to the CONTRAT_TRAVAIL table. Do
 * not modify this class because it will be overwritten if the configuration
 * file related to this class is modified.
 * 
 * @hibernate.class table="CONTRAT_TRAVAIL"
 */
public abstract class BaseContratTravail implements Serializable {

	public static String PROP_ID_SALARIE = "IdSalarie";
	public static String PROP_ID_TYPE_CONTRAT = "IdTypeContrat";
	public static String PROP_FIN_CONTRAT = "FinContrat";
	public static String PROP_NATURE_CONTRAT = "natureContrat";
	public static String PROP_ID_MOTIF_RUPTURE_CONTRAT = "IdMotifRuptureContrat";
	public static String PROP_ID = "Id";
	public static String PROP_DEBUT_CONTRAT = "DebutContrat";
	public static String PROP_ID_METIER = "IdMetier";
	public static String PROP_JUSTIFICATIF = "Justificatif";
	public static String PROP_RENOUVELLEMENT_C_D_D = "RenouvellementCDD";

	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.util.Date _debutContrat;
	private java.util.Date _finContrat;
	private boolean _renouvellementCDD;
	private java.lang.String _justificatif;
	private java.lang.String _natureContrat;

	// many to one
	private com.cci.gpec.db.Metier metier;
	private com.cci.gpec.db.Typecontrat typeContrat;
	private com.cci.gpec.db.Salarie salarie;
	private com.cci.gpec.db.Motifrupturecontrat motifRuptureContrat;

	// constructors
	public BaseContratTravail() {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseContratTravail(java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	protected void initialize() {
	}

	/**
	 * Return the unique identifier of this class
	 * 
	 * @hibernate.id generator-class="identity" column="ID_CONTRAT"
	 */
	public java.lang.Integer getId() {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * 
	 * @param _id
	 *            the new ID
	 */
	public void setId(java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}

	/**
	 * Return the value associated with the column: DEBUT_CONTRAT
	 */
	public java.util.Date getDebutContrat() {
		return _debutContrat;
	}

	/**
	 * Set the value related to the column: DEBUT_CONTRAT
	 * 
	 * @param _debutContrat
	 *            the DEBUT_CONTRAT value
	 */
	public void setDebutContrat(java.util.Date _debutContrat) {
		this._debutContrat = _debutContrat;
	}

	/**
	 * Return the value associated with the column: FIN_CONTRAT
	 */
	public java.util.Date getFinContrat() {
		return _finContrat;
	}

	/**
	 * Set the value related to the column: FIN_CONTRAT
	 * 
	 * @param _finContrat
	 *            the FIN_CONTRAT value
	 */
	public void setFinContrat(java.util.Date _finContrat) {
		this._finContrat = _finContrat;
	}

	/**
	 * Return the value associated with the column: RENOUVELLEMENT_CDD
	 */
	public boolean isRenouvellementCDD() {
		return _renouvellementCDD;
	}

	/**
	 * Set the value related to the column: RENOUVELLEMENT_CDD
	 * 
	 * @param _renouvellementCDD
	 *            the RENOUVELLEMENT_CDD value
	 */
	public void setRenouvellementCDD(boolean _renouvellementCDD) {
		this._renouvellementCDD = _renouvellementCDD;
	}

	/**
	 * Return the value associated with the column: JUSTIFICATIF
	 */
	public java.lang.String getJustificatif() {
		return _justificatif;
	}

	/**
	 * Set the value related to the column: JUSTIFICATIF
	 * 
	 * @param _justificatif
	 *            the JUSTIFICATIF value
	 */
	public void setJustificatif(java.lang.String _justificatif) {
		this._justificatif = _justificatif;
	}

	/**
	 * Return the value associated with the column: NATURE_CONTRAT
	 */
	public java.lang.String getNatureContrat() {
		return _natureContrat;
	}

	/**
	 * Set the value related to the column: NATURE_CONTRAT
	 * 
	 * @param _natureContrat
	 *            the NATURE_CONTRAT value
	 */
	public void setNatureContrat(java.lang.String _natureContrat) {
		this._natureContrat = _natureContrat;
	}

	/**
	 * @hibernate.property column=ID_METIER
	 */
	public com.cci.gpec.db.Metier getMetier() {
		return this.metier;
	}

	/**
	 * Set the value related to the column: ID_METIER
	 * 
	 * @param _idMetier
	 *            the ID_METIER value
	 */
	public void setMetier(com.cci.gpec.db.Metier metier) {
		this.metier = metier;
	}

	/**
	 * @hibernate.property column=ID_TYPE_CONTRAT
	 */
	public com.cci.gpec.db.Typecontrat getTypeContrat() {
		return this.typeContrat;
	}

	/**
	 * Set the value related to the column: ID_TYPE_CONTRAT
	 * 
	 * @param _idTypeContrat
	 *            the ID_TYPE_CONTRAT value
	 */
	public void setTypeContrat(com.cci.gpec.db.Typecontrat typeContrat) {
		this.typeContrat = typeContrat;
	}

	/**
	 * @hibernate.property column=ID_SALARIE
	 */
	public com.cci.gpec.db.Salarie getSalarie() {
		return this.salarie;
	}

	/**
	 * Set the value related to the column: ID_SALARIE
	 * 
	 * @param _idSalarie
	 *            the ID_SALARIE value
	 */
	public void setSalarie(com.cci.gpec.db.Salarie salarie) {
		this.salarie = salarie;
	}

	/**
	 * @hibernate.property column=ID_MOTIF_RUPTURE_CONTRAT
	 */
	public com.cci.gpec.db.Motifrupturecontrat getMotifRuptureContrat() {
		return this.motifRuptureContrat;
	}

	/**
	 * Set the value related to the column: ID_MOTIF_RUPTURE_CONTRAT
	 * 
	 * @param _idMotifRuptureContrat
	 *            the ID_MOTIF_RUPTURE_CONTRAT value
	 */
	public void setMotifRuptureContrat(
			com.cci.gpec.db.Motifrupturecontrat motifRuptureContrat) {
		this.motifRuptureContrat = motifRuptureContrat;
	}

	public boolean equals(Object obj) {
		if (null == obj)
			return false;
		if (!(obj instanceof com.cci.gpec.db.base.BaseContratTravail))
			return false;
		else {
			com.cci.gpec.db.base.BaseContratTravail mObj = (com.cci.gpec.db.base.BaseContratTravail) obj;
			if (null == this.getId() || null == mObj.getId())
				return false;
			else
				return (this.getId().equals(mObj.getId()));
		}
	}

	public int hashCode() {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId())
				return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":"
						+ this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}

	public String toString() {
		return super.toString();
	}

}